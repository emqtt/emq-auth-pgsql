name: Run test cases

on: [push, pull_request]

jobs:    
    run_test_cases:
        runs-on: ubuntu-latest
 
        strategy:
            matrix:
                pgsql_tag:
                    - 9
                    - 10
                    - 11
                    - 12
                    - 13
 
        steps:
            - name: install docker-compose
              run: | 
                sudo curl -L "https://github.com/docker/compose/releases/download/1.25.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
                sudo chmod +x /usr/local/bin/docker-compose
            - uses: actions/checkout@v1
            - name: run test cases
              env:
                 PGSQL_TAG: ${{ matrix.pgsql_tag }}
              run: |
                cp test/emqx_auth_pgsql_SUITE_data/* .ci/pgsql/
                docker-compose -f .ci/docker-compose.yml -p tests up -d --build
                docker exec -i $(docker ps -a -f name=tests_erlang_1 -q) sh -c "sed -i '/auth.pgsql.server/c auth.pgsql.server = pgsql_server:5432' /emqx_auth_pgsql/etc/emqx_auth_pgsql.conf"
                docker exec -i tests_erlang_1 sh -c "make -C /emqx_auth_pgsql xref"
                docker exec -i tests_erlang_1 sh -c "make -C /emqx_auth_pgsql eunit"
                docker exec -i tests_erlang_1 sh -c "make -C /emqx_auth_pgsql ct"
                docker exec -i tests_erlang_1 sh -c "make -C /emqx_auth_pgsql cover"
            - uses: actions/upload-artifact@v1
              if: failure()
              with:
                name: logs_for_pgsql${{ matrix.pgsql_tag }}
                path: _build/test/logs

